```
  인수 개수가 일정하지 않은 메서드를 정의해야 한다면 가변인수가 반드시 필요하다. 
  메서드를 정의할 때 필수 매서드는 가변인수 앞에 두고, 가변인수를 사용할 때는 성능 문제까지 고려하자.

```

가변인수 메서드는 명시한 타입의 인수를 0개 이상 받을 수 있다. 
가변인수 메서드를 호출하면, 가장 먼저 인수의 개수와 길이가 같은 배열을 만들고 인수들은 이 배열에 저장하여 가변인수 메서드에 건내준다.

 ```java
  static int sum(int... args){
    int sum = 0;
    for (int arg : args)
      sum += arg;
    return sum;
  }
 ```
 
 성능이 민감한 상황이라면 가변인수가 걸림돌이 될 수 있다. 
 가변인수 메서드는 호출될 때마다 배열을 새로 하나 할당하고 초기화 한다. 
 아래와 같은 패턴을 활용한다. 
 예를 들어 해당 메서드의 호출의 95%가 인수를 3개 이하로 사용한다 할때, 다중정의 메서드를 사용하면 
 가변인수가 인수 4개 이상인 5%의 호출만 담당할 수 있다. 
 
```java
  public void foo() { } 
  public void foo(int a1) { } 
  public void foo(int a1, int a2) { } 
  public void foo(int a1, int a2, int a3) { } 
  public void foo(int a1, int a2, int a3, int... rest ) { } 
```
